name: JAVDatabase

sceneByURL:
  - action: scrapeXPath
    url:
      - javdatabase.com
    scraper: sceneScraper

movieByURL:
  - action: scrapeXPath
    url:
      - javdatabase.com
    scraper: movieScraper

performerByURL:
  - action: scrapeXPath
    url:
      - javdatabase.com
    scraper: performerScraper

xPathScrapers:
  sceneScraper:
    scene:
      Title: &title //h1
      Date: &date //td[contains(.,'Release Date:')]/following-sibling::td
      Director: &director //td[contains(.,'Director:')]/following-sibling::td
      Image: &image //meta[@property='og:image']/@content
      Studio: &studio
        Name: //td[contains(.,'Studio:')]/following-sibling::td
        URL: //td[contains(.,'Studio:')]/following-sibling::td//a/@href
      Code: //td[contains(.,'DVD ID:')]/following-sibling::td | //td[contains(.,'Content ID:')]/following-sibling::td
      Tags:
        Name: //td[contains(.,'Genre(s):')]/following-sibling::td//a
      Details: &details //tr[td[h2[@class='subhead']]]/following-sibling::tr/td/text()
      Performers:
        Name: //div[h2[contains(.,'/Idols')]]//a/text()
        Image:
          selector: //div[h2[contains(.,'/Idols')]]//img/@data-src
          postProcess:
            - replace:
                - regex: '/thumb/'
                  with: '/full/'
        URL: //div[h2[contains(.,'/Idols')]]//a/@href
      Movies:
        Name: *title
        FrontImage: *image
        Studio: *studio
        Duration: &duration
          selector: //td[contains(.,'Runtime:')]/following-sibling::td
          postProcess:
            # 1) strip out any parenthetical content, e.g. (HD: 128)
            - replace:
                - regex: '\s*\(.*?\)'
                  with: ''
            # 2) collapse multiple whitespace
            - replace:
                - regex: '\s+'
                  with: ' '
            # 3) convert “min” or “min.” to “:00”
            - replace:
                - regex: 'min\.?'
                  with: ':00'
            # 4) remove stray “HD” markers
            - replace:
                - regex: 'HD:?'
                  with: ''
            # 5) remove space before colon
            - replace:
                - regex: '\s+:'
                  with: ':'
            # 6) trim leading/trailing whitespace
            - replace:
                - regex: '^\s+|\s+$'
                  with: ''
        URL: &url //link[@rel='canonical']/@href

  movieScraper:
    movie:
      Name: *title
      Synopsis:
        selector: //h4[@class='subhead' and starts-with(normalize-space(.), 'About')]/following-sibling::text()
        postProcess:
          - replace:
              - regex: '\s+'
                with: ' '
          - replace:
              - regex: '^\s+|\s+$'
                with: ''
      Date:
        selector: //p[b[contains(.,'Release Date:')]]/text()
        postProcess:
          - replace:
              - regex: '\s+'
                with: ' '
          - replace:
              - regex: '^\s+|\s+$'
                with: ''
      Duration:
        selector: //p[b[contains(.,'Runtime:')]]/text()
        postProcess:
          - replace:
              - regex: '\s*\(.*?\)'
                with: ''
          - replace:
              - regex: '\s+'
                with: ' '
          - replace:
              - regex: 'min\.?'
                with: ':00'
          - replace:
              - regex: 'HD:?'
                with: ''
          - replace:
              - regex: '\s+:'
                with: ':'
          - replace:
              - regex: '^\s+|\s+$'
                with: ''
      Director: *director
      FrontImage: *image
      Studio:
        Name:
          selector: //p[b[contains(.,'Studio:')]]//a/text()
        URL:
          selector: //p[b[contains(.,'Studio:')]]//a/@href
      URL: *url

  performerScraper:
    common:
      $avatar: //div[@class='avatar-box']
    performer:
      Name:
        selector: //h1[@class='idol-name']
        postProcess:
          - replace:
              - regex: '(.+)\s*-\s*JAV\sProfile$'
                with: '$1'
      Gender:
        fixed: Female
      Image: //div[@class='idol-portrait']//img/@data-src
      Birthdate: //b[contains(.,'DOB:')]/following-sibling::a
      HairColor: //b[contains(.,'Hair Color(s):')]/following-sibling::a
      Tags:
        Name: //b[contains(.,'Tags:')]/following-sibling::a/text()
      Height:
        selector: //b[contains(.,'Height:')]/following-sibling::a
        postProcess:
          - replace:
              - regex: '[^\d]'
                with: ''
      Measurements:
        selector: //b[contains(.,'Measurements:')]/following-sibling::text()
        postProcess:
          - replace:
              - regex: '.+?[^\d-]([\d-]+)[^\d-].+'
                with: '$1'
          # remove any trailing dash
          - replace:
              - regex: '-$'
                with: ''

# Last Updated May 6, 2025
